
# [[ PNAME ]]


This is the default directory structure for a Shake application. Is a good
starting point but isn't mandatory. You can adapt it to your needs and
preferences.

    ├── README.md
    ├── app
    │   ├── app.py
    │   ├── controllers
    │   │   ├── main.py
    │   ├── models
    │   │   ├── main.py
    │   │   └── users.py
    │   ├── settings
    │   │   ├── __init__.py
    │   │   └── _LOCAL.py
    │   ├── urls.py
    │   └── views
    │       ├── layouts
    │       │   └── base.html
    │       ├── index.html
    │       └── not_found.html
    │       ├── error.html
    ├── manage.py
    ├── requirements.txt
    ├── static
    │   ├── css
    │   │   └── [[ PNAME ]].css
    │   ├── images
    │   │   └── favicon.ico
    │   ├── js
    │   │   ├── jquery-1.6.2.min.js
    │   │   ├── [[ PNAME ]].js
    │   │   └── underscore-1.1.6.min.js
    │   └── robots.txt
    └── tests


app
:   This directory contains all the pyton codes specific for
    this application.

app/app.py
:   The file where your main application object is created.

app/controllers
:   A controller handles a web request from the user, interact
    with the models and returns back and appropiated rendered
    view.

app/models
:   The classes that model and wrap the data stored in our
    application's database, and the rules to manage it.
  
app/settings
:   This subdirectory contains the small amount of configuration
    code that your application will need, including your
    database configuration and others.

app/urls.py
:   List of URL routing rules to make the apllication call a
    specific controller for a given URL.

app/views
:   The views subdirectory holds the display templates to fill
    in with data from our application, convert to HTML (or any
    other text-based format), and return to the user's browser.
    All templates uses the Jinja2 syntax by default.

app/views/layouts
:   Holds the template files for layouts to be used with views.
    This contains the common section such as the header, footer,
   etc.

manage.py
:   A command line program for managment tasks. You can add your
    own commands to this file.

requirements.txt
:   A list of the python modules required by your aplicación. To
    install all of them, just do:

        pip install -r requierements.txt

static
:   This directory has web files that don't change, such as
    JavaScript files (`static/scripts), images 
    (`static/images`), stylesheets (`static/styles`),
    and others.

tests
:   The tests you'll write. Yes, you should write tests.

